{"version":3,"sources":["components/TodoTemplate.js","components/TodoInsert.js","components/TodoListItem.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoTemplate","children","className","TodoInsert","onInsert","useState","value","setValue","onChange","useCallback","e","target","onSubmit","preventDefault","placeholder","type","TodoListItem","todo","onRemove","onToggle","id","text","checked","cn","onClick","TodoList","todos","map","App","setTodos","nextId","useRef","current","concat","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAaeA,EAVM,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtB,OACE,sBAAKC,UAAU,eAAf,UACE,qBAAKA,UAAU,YAAf,wCAEA,qBAAKA,UAAU,UAAf,SAA0BD,Q,OC6BjBE,G,MAjCI,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAWC,uBAAY,SAAAC,GAC3BH,EAASG,EAAEC,OAAOL,SACjB,IAEGM,EAAWH,uBACf,SAAAC,GACEN,EAASE,GACTC,EAAS,IAITG,EAAEG,mBAEJ,CAACT,EAAUE,IAGb,OACE,uBAAMJ,UAAU,aAAaU,SAAUA,EAAvC,UACE,uBACEE,YAAY,qDACZR,MAAOA,EACPE,SAAUA,IAEZ,wBAAQO,KAAK,SAAb,SACE,cAAC,IAAD,W,gBCNOC,G,MAhBM,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC9BC,EAAsBH,EAAtBG,GAAIC,EAAkBJ,EAAlBI,KAAMC,EAAYL,EAAZK,QAElB,OACE,sBAAKpB,UAAU,eAAf,UACE,sBAAKA,UAAWqB,IAAG,WAAY,CAAED,YAAYE,QAAS,kBAAML,EAASC,IAArE,UACGE,EAAU,cAAC,IAAD,IAAiB,cAAC,IAAD,IAC5B,qBAAKpB,UAAU,OAAf,SAAuBmB,OAEzB,qBAAKnB,UAAU,SAASsB,QAAS,kBAAMN,EAASE,IAAhD,SACE,cAAC,IAAD,WCLOK,G,MAVE,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOR,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACnC,OACE,qBAAKjB,UAAU,WAAf,SACGwB,EAAMC,KAAI,SAAAV,GAAI,OACb,cAAC,EAAD,CAAcA,KAAMA,EAAoBC,SAAUA,EAAUC,SAAUA,GAAvCF,EAAKG,WC0E7BQ,G,MA5EH,WACV,MAA0BvB,mBAAS,CACjC,CACEe,GAAI,EACJC,KAAM,2DACNC,SAAS,GAEX,CACEF,GAAI,EACJC,KAAM,uEACNC,SAAS,GAEX,CACEF,GAAI,EACJC,KAAM,kEACNC,SAAS,KAdb,mBAAOI,EAAP,KAAcG,EAAd,KAoBMC,EAASC,iBAAO,GAEhB3B,EAAWK,uBACf,SAAAY,GACE,IAAMJ,EAAO,CACXG,GAAIU,EAAOE,QACXX,OACAC,SAAS,GAEXO,EAASH,EAAMO,OAAOhB,IACtBa,EAAOE,SAAW,IAEpB,CAACN,IAGGR,EAAWT,uBACf,SAAAW,GACES,EAASH,EAAMQ,QAAO,SAAAjB,GAAI,OAAIA,EAAKG,KAAOA,QAE5C,CAACM,IAGGP,EAAWV,uBACf,SAAAW,GACES,EACEH,EAAMC,KAAI,SAAAV,GAAI,OACZA,EAAKG,KAAOA,EAAZ,2BAAsBH,GAAtB,IAA4BK,SAAUL,EAAKK,UAAYL,QAI7D,CAACS,IAGH,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAYtB,SAAUA,IACtB,cAAC,EAAD,CAAUsB,MAAOA,EAAOR,SAAUA,EAAUC,SAAUA,SCnD7CgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.faf2a603.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoTemplate.scss';\n\nconst TodoTemplate = ({ children }) => {\n  return (\n    <div className=\"TodoTemplate\">\n      <div className=\"app-title\"> 일정 관리</div>\n      {/* <div className=\"app-title\"> yts.mx 영화 정보</div> */}\n      <div className=\"content\">{children}</div>\n    </div>\n  );\n};\n\nexport default TodoTemplate;\n\n","import React, { useState, useCallback } from 'react';\nimport { MdAdd } from 'react-icons/md';\nimport './TodoInsert.scss';\n\nconst TodoInsert = ({ onInsert }) => {\n  const [value, setValue] = useState('');\n\n  const onChange = useCallback(e => {\n    setValue(e.target.value);\n  }, []);\n\n  const onSubmit = useCallback(\n    e => {\n      onInsert(value);\n      setValue(''); // value 값 초기화\n\n      // submit 이벤트는 브라우저에서 새로고침을 발생시킵니다.\n      // 이를 방지하기 위하여 이 함수를 호출합니다.\n      e.preventDefault();\n    },\n    [onInsert, value],\n  );\n\n  return (\n    <form className=\"TodoInsert\" onSubmit={onSubmit}>\n      <input\n        placeholder=\"할 일을 입력하세요\"    // \"입력포맷: <정렬기준> <검색개수>   예: like 5\" \n        value={value}\n        onChange={onChange}\n      />\n      <button type=\"submit\">\n        <MdAdd />\n      </button>\n    </form>\n  );\n};\n\nexport default TodoInsert;\n","import React from 'react';\nimport {\n  MdCheckBoxOutlineBlank,\n  MdCheckBox,\n  MdRemoveCircleOutline,\n} from 'react-icons/md';\nimport cn from 'classnames';\nimport './TodoListItem.scss';\n\nconst TodoListItem = ({ todo, onRemove, onToggle }) => {\n  const { id, text, checked } = todo;\n\n  return (\n    <div className=\"TodoListItem\">\n      <div className={cn('checkbox', { checked })} onClick={() => onToggle(id)}>\n        {checked ? <MdCheckBox /> : <MdCheckBoxOutlineBlank />}\n        <div className=\"text\">{text}</div>\n      </div>\n      <div className=\"remove\" onClick={() => onRemove(id)}>\n        <MdRemoveCircleOutline />\n      </div>\n    </div>\n  );\n};\n\nexport default TodoListItem;\n","import React from 'react';\nimport TodoListItem from './TodoListItem';\nimport './TodoList.scss';\n\nconst TodoList = ({ todos, onRemove, onToggle }) => {\n  return (\n    <div className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoListItem todo={todo} key={todo.id} onRemove={onRemove} onToggle={onToggle} />\n      ))}\n    </div>\n  );\n};\n\nexport default TodoList;\n","import React, { useState, useRef, useCallback } from 'react';\nimport TodoTemplate from './components/TodoTemplate';\nimport TodoInsert from './components/TodoInsert';\nimport TodoList from './components/TodoList';\nimport './App.scss';\n\nconst App = () => {\n  const [todos, setTodos] = useState([\n    {\n      id: 1,\n      text: '리액트 기초 알아보기',\n      checked: true,\n    },\n    {\n      id: 2,\n      text: '컴포넌트 스타일링해 보기',\n      checked: true,\n    },\n    {\n      id: 3,\n      text: '일정관리 앱 만들어 보기',\n      checked: false,\n    },  \n  ]);\n\n  // 고유 값으로 사용 될 id\n  // ref 를 사용하여 변수 담기\n  const nextId = useRef(4);\n\n  const onInsert = useCallback(\n    text => {\n      const todo = {\n        id: nextId.current,\n        text,\n        checked: false,\n      };\n      setTodos(todos.concat(todo));\n      nextId.current += 1; // nextId 1 씩 더하기\n    },\n    [todos],\n  );\n\n  const onRemove = useCallback(\n    id => {\n      setTodos(todos.filter(todo => todo.id !== id));\n    },\n    [todos],\n  );\n\n  const onToggle = useCallback(\n    id => {\n      setTodos(\n        todos.map(todo =>\n          todo.id === id ? { ...todo, checked: !todo.checked } : todo,\n        ),\n      );\n    },\n    [todos],\n  );\n\n  return (\n    <TodoTemplate>\n      <TodoInsert onInsert={onInsert} />\n      <TodoList todos={todos} onRemove={onRemove} onToggle={onToggle} />\n\n      {/*\n        <input type=\"button\" class=\"btn\" value=\"1\"/>\n        <input type=\"button\" class=\"btn\" value=\"2\"/>\n        <input type=\"button\" class=\"btn\" value=\"3\"/>\n        <input type=\"button\" class=\"btn\" value=\"4\"/>\n        <input type=\"button\" class=\"btn\" value=\"5\"/>\n        <input type=\"button\" class=\"btn\" value=\"6\"/>\n        <input type=\"button\" class=\"btn\" value=\"7\"/>\n        <input type=\"button\" class=\"btn\" value=\"8\"/>\n        <input type=\"button\" class=\"btn\" value=\"9\"/>\n        <input type=\"button\" class=\"btn\" value=\"10\"/>\n      */}\n      \n    </TodoTemplate>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}